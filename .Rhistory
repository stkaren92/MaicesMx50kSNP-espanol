pca <- snpgdsPCA(genofile, num.thread=2)
datamat<-cbind(fullmat, pca$eigenvect[,1], pca$eigenvect[,2])
## Add ColorBy info
# Raza
numcolsneeded<-length(levels(fullmat$Raza))-2
ColorBy<-c(rainbow(numcolsneeded), "black", "darkgrey")
x<-fullmat$Raza
levels(x)<-ColorBy
ColorByRaza<-x
# Long
numcolsneeded<-length(levels(as.factor(fullmat$Longitud)))
ColorBy<-cm.colors(numcolsneeded)
x<-as.factor(fullmat$Longitud)
levels(x)<-ColorBy
ColorByLong<-x
# Lat
numcolsneeded<-length(levels(as.factor(fullmat$Latitud)))
ColorBy<-cm.colors(numcolsneeded)
x<-as.factor(fullmat$Latitud)
levels(x)<-ColorBy
ColorByLat<-x
# Alt
numcolsneeded<-length(levels(as.factor(fullmat$Altitud)))
ColorBy<-terrain.colors(numcolsneeded)
x<-as.factor(fullmat$Altitud)
levels(x)<-ColorBy
ColorByAlt<-x
#GpEc
numcolsneeded<-length(levels(as.factor(fullmat$Ruizetal2008_grupo)))
ColorBy<-c("white", "turquoise", "lightseagreen", "mediumturquoise", "gold", "goldenrod", "darkgoldenrod", "khaki", "yellow3", "yellow", "red", "darkred", "grey")
x<-as.factor(fullmat$Ruizetal2008_grupo)
levels(x)<-ColorBy
ColorByGpEc<-x
# Gp Tax
numcolsneeded<-length(levels(as.factor(fullmat$Sanchezetal_grupo)))
ColorBy<-c("orangered3", "yellow2", "springgreen4", "cyan", "mediumblue", "violetred", "red2", "black", "black")
x<-as.factor(fullmat$Sanchezetal_grupo)
levels(x)<-ColorBy
ColorByTax<-x
# Categ CatAlt
numcolsneeded<-length(levels(fullmat$Categ.Altitud))
ColorBy<-rainbow(numcolsneeded)
x<-fullmat$Categ.Altitud
levels(x)<-ColorBy
ColorByCategAlt<-x
# Biogeo
ColorBy<-c(rainbow(10), "#865700" , "#4F6A00" , "#007700" , "#007F57", "#007D99" , "#0068C5" , "#8330CB" , "#B700A2" , "#B8095F")
x<-fullmat$Rbiogeo
levels(x)<-ColorBy
ColorByBiogeo<-x
# DivFloristica
ColorBy<-c(rainbow(6), "#007700" , "#007F57", "#865700","#007D99" , "green3" , "#B8095F", "gold", "blue4", "magenta3", "#4F6A00")
x<-fullmat$DivFloristic
levels(x)<-ColorBy
ColorByDivFloristic<-x
# Biogeo maiz Perales et Golicher
ColorBy<-c("grey", "red", "darkorange2", "#00FFFFFF", "#0000FFFF", "#FF00FFFF", "blue4", "green3" , "#865700", "#007D99" , "#B8095F", "gold")
x<-fullmat$PeralesBiog
levels(x)<-ColorBy
ColorByPeralesBiog<-x
# Save data mat
datamat<-cbind(datamat, ColorByRaza, ColorByLong, ColorByLat, ColorByAlt, ColorByGpEc, ColorByTax, ColorByCategAlt, ColorByBiogeo, ColorByDivFloristic, ColorByPeralesBiog)
write.table(datamat, file= "App-1/data/maizteocintle_SNP50k_meta_extended_4shiny.txt", sep="\t", row.names=FALSE)
shiny::runApp('App-1')
#  get full metainfo table
metafile<- "maizteocintle_SNP50k_meta_extended.txt"
fullmat<- read.delim(file= paste0(WD, "/../meta/", metafile))
#Hide Agricultor data (due to Ley de datos personales)
fullmat<-fullmat[,c(1:10,12:ncol(fullmat))]
datamat<-cbind(fullmat, pca$eigenvect[,1], pca$eigenvect[,2])
## Add ColorBy info
# Raza
numcolsneeded<-length(levels(fullmat$Raza))-2
ColorBy<-c(rainbow(numcolsneeded), "black", "darkgrey")
x<-fullmat$Raza
levels(x)<-ColorBy
ColorByRaza<-x
# Long
numcolsneeded<-length(levels(as.factor(fullmat$Longitud)))
ColorBy<-cm.colors(numcolsneeded)
x<-as.factor(fullmat$Longitud)
levels(x)<-ColorBy
ColorByLong<-x
# Lat
numcolsneeded<-length(levels(as.factor(fullmat$Latitud)))
ColorBy<-cm.colors(numcolsneeded)
x<-as.factor(fullmat$Latitud)
levels(x)<-ColorBy
ColorByLat<-x
# Alt
numcolsneeded<-length(levels(as.factor(fullmat$Altitud)))
ColorBy<-terrain.colors(numcolsneeded)
x<-as.factor(fullmat$Altitud)
levels(x)<-ColorBy
ColorByAlt<-x
#GpEc
numcolsneeded<-length(levels(as.factor(fullmat$Ruizetal2008_grupo)))
ColorBy<-c("white", "turquoise", "lightseagreen", "mediumturquoise", "gold", "goldenrod", "darkgoldenrod", "khaki", "yellow3", "yellow", "red", "darkred", "grey")
x<-as.factor(fullmat$Ruizetal2008_grupo)
levels(x)<-ColorBy
ColorByGpEc<-x
# Gp Tax
numcolsneeded<-length(levels(as.factor(fullmat$Sanchezetal_grupo)))
ColorBy<-c("orangered3", "yellow2", "springgreen4", "cyan", "mediumblue", "violetred", "red2", "black", "black")
x<-as.factor(fullmat$Sanchezetal_grupo)
levels(x)<-ColorBy
ColorByTax<-x
# Categ CatAlt
numcolsneeded<-length(levels(fullmat$Categ.Altitud))
ColorBy<-rainbow(numcolsneeded)
x<-fullmat$Categ.Altitud
levels(x)<-ColorBy
ColorByCategAlt<-x
# Biogeo
ColorBy<-c(rainbow(10), "#865700" , "#4F6A00" , "#007700" , "#007F57", "#007D99" , "#0068C5" , "#8330CB" , "#B700A2" , "#B8095F")
x<-fullmat$Rbiogeo
levels(x)<-ColorBy
ColorByBiogeo<-x
# DivFloristica
ColorBy<-c(rainbow(6), "#007700" , "#007F57", "#865700","#007D99" , "green3" , "#B8095F", "gold", "blue4", "magenta3", "#4F6A00")
x<-fullmat$DivFloristic
levels(x)<-ColorBy
ColorByDivFloristic<-x
# Biogeo maiz Perales et Golicher
ColorBy<-c("grey", "red", "darkorange2", "#00FFFFFF", "#0000FFFF", "#FF00FFFF", "blue4", "green3" , "#865700", "#007D99" , "#B8095F", "gold")
x<-fullmat$PeralesBiog
levels(x)<-ColorBy
ColorByPeralesBiog<-x
# Save data mat
datamat<-cbind(datamat, ColorByRaza, ColorByLong, ColorByLat, ColorByAlt, ColorByGpEc, ColorByTax, ColorByCategAlt, ColorByBiogeo, ColorByDivFloristic, ColorByPeralesBiog)
write.table(datamat, file= "App-1/data/maizteocintle_SNP50k_meta_extended_4shiny.txt", sep="\t", row.names=FALSE)
shiny::runApp('App-1')
terrain.colors(numcolsneeded)
ColorBy<-rev(terrain.colors(numcolsneeded))
rev(terrain.colors(numcolsneeded))
#  get full metainfo table
metafile<- "maizteocintle_SNP50k_meta_extended.txt"
fullmat<- read.delim(file= paste0(WD, "/../meta/", metafile))
#Hide Agricultor data (due to Ley de datos personales)
fullmat<-fullmat[,c(1:10,12:ncol(fullmat))]
#  get full metainfo table
metafile<- "maizteocintle_SNP50k_meta_extended.txt"
fullmat<- read.delim(file= paste0(WD, "/../meta/", metafile))
#Hide Agricultor data (due to Ley de datos personales)
fullmat<-fullmat[,c(1:10,12:ncol(fullmat))]
## Add PCA data
pca <- snpgdsPCA(genofile, num.thread=2)
datamat<-cbind(fullmat, pca$eigenvect[,1], pca$eigenvect[,2])
## Add ColorBy info
# Raza
numcolsneeded<-length(levels(fullmat$Raza))-2
ColorBy<-c(rainbow(numcolsneeded), "black", "darkgrey")
x<-fullmat$Raza
levels(x)<-ColorBy
ColorByRaza<-x
# Long
numcolsneeded<-length(levels(as.factor(fullmat$Longitud)))
ColorBy<-cm.colors(numcolsneeded)
x<-as.factor(fullmat$Longitud)
levels(x)<-ColorBy
ColorByLong<-x
# Lat
numcolsneeded<-length(levels(as.factor(fullmat$Latitud)))
ColorBy<-cm.colors(numcolsneeded)
x<-as.factor(fullmat$Latitud)
levels(x)<-ColorBy
ColorByLat<-x
# Alt
numcolsneeded<-length(levels(as.factor(fullmat$Altitud)))
ColorBy<-rev(terrain.colors(numcolsneeded))
x<-as.factor(fullmat$Altitud)
levels(x)<-ColorBy
ColorByAlt<-x
#GpEc
numcolsneeded<-length(levels(as.factor(fullmat$Ruizetal2008_grupo)))
ColorBy<-c("white", "turquoise", "lightseagreen", "mediumturquoise", "gold", "goldenrod", "darkgoldenrod", "khaki", "yellow3", "yellow", "red", "darkred", "grey")
x<-as.factor(fullmat$Ruizetal2008_grupo)
levels(x)<-ColorBy
ColorByGpEc<-x
# Gp Tax
numcolsneeded<-length(levels(as.factor(fullmat$Sanchezetal_grupo)))
ColorBy<-c("orangered3", "yellow2", "springgreen4", "cyan", "mediumblue", "violetred", "red2", "black", "black")
x<-as.factor(fullmat$Sanchezetal_grupo)
levels(x)<-ColorBy
ColorByTax<-x
# Categ CatAlt
numcolsneeded<-length(levels(fullmat$Categ.Altitud))
ColorBy<-rainbow(numcolsneeded)
x<-fullmat$Categ.Altitud
levels(x)<-ColorBy
ColorByCategAlt<-x
# Biogeo
ColorBy<-c(rainbow(10), "#865700" , "#4F6A00" , "#007700" , "#007F57", "#007D99" , "#0068C5" , "#8330CB" , "#B700A2" , "#B8095F")
x<-fullmat$Rbiogeo
levels(x)<-ColorBy
ColorByBiogeo<-x
# DivFloristica
ColorBy<-c(rainbow(6), "#007700" , "#007F57", "#865700","#007D99" , "green3" , "#B8095F", "gold", "blue4", "magenta3", "#4F6A00")
x<-fullmat$DivFloristic
levels(x)<-ColorBy
ColorByDivFloristic<-x
# Biogeo maiz Perales et Golicher
ColorBy<-c("grey", "red", "darkorange2", "#00FFFFFF", "#0000FFFF", "#FF00FFFF", "blue4", "green3" , "#865700", "#007D99" , "#B8095F", "gold")
x<-fullmat$PeralesBiog
levels(x)<-ColorBy
ColorByPeralesBiog<-x
# Save data mat
datamat<-cbind(datamat, ColorByRaza, ColorByLong, ColorByLat, ColorByAlt, ColorByGpEc, ColorByTax, ColorByCategAlt, ColorByBiogeo, ColorByDivFloristic, ColorByPeralesBiog)
write.table(datamat, file= "App-1/data/maizteocintle_SNP50k_meta_extended_4shiny.txt", sep="\t", row.names=FALSE)
shiny::runApp('App-1')
x<-fullmat[!duplicated(fullmat$Raza),]
x<-x[, c(4,19)]
nrow(x)
head(x)
x<-x[order(x$Sanchezetal_grupo),]
x<-fullmat[!duplicated(fullmat$Raza),]
x<-x[, c(4,18)]
nrow(x)
head(x)
x<-x[order(x$Sanchezetal_grupo),]
head(x)
shiny::runApp('App-1')
x
levels(x$Raza)
x$Raza<-factor(as.vector(x$Raza), levels=as.vector(x$Raza))
x
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
?tiplabels
shiny::runApp('App-1')
palette
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
levels(maizemat2$ColorByLong)
levels(maizemat$ColorByLong)
shiny::runApp('App-1')
y<-c(1:5)
tipmaiz<-c(1:165)
tipmaiz<-c(1:165)
tipmaiz
y
tipmaiz[!c(162:65)]
!c(162:65)
tipmaiz<-tipmaiz[!c(162:165)]
tipmaiz
tipmaiz<-c(1:165)
tipmaiz![c(162:165)]
tipmaiz[tipmaiz %in% !c(162:165)]
c(162:165)
tipmaiz %in% c(162:165)
!c(tipmaiz %in% c(162:165))
tipmaiz[!c(tipmaiz %in% c(162:165))]
tipmaiz<-tipmaiz[!c(tipmaiz %in% c(162:165))]
tipmaiz<-c(1:165)
tipmaiz[c(tipteos %in% c(162:165))]
tipteos<- tipmaiz
tipteos[c(tipteos %in% c(162:165))]
tipteos<-c(165)
tipteos[c(tipteos %in% c(162:165))]
shiny::runApp('App-1')
shiny::runApp('App-1')
palette <-levels(fullmat$ColorByRaza)
palette()
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
maizemat2<-maizemat[c(1:5, 10:12)]
maizemat2<-maizemat[c(1:5, 10:12),]
tipmaiz<-match(maizemat2$NSiembra, maizemat$NSiembra)
tipmaiz
tipmaiz[!c(tipmaiz %in% c(162:165))]
tippar<-match(maizemat2$NSiembra, maizemat$NSiembra)
tippar
tippar[c(tippar %in% c(162:163))]
maizemat2<-maizemat[c(1:5, 10:12, 163),]
tippar<-match(maizemat2$NSiembra, maizemat$NSiembra)
tippar[c(tippar %in% c(162:163))]
tippar
match(maizemat2()$NSiembra, maizemat$NSiembra)
tipmaiz
is.vector(tipmaiz)
plot(maizetree, type="unrooted", show.tip=FALSE, edge.width=0.1)
tiplabels(tip=tipmaiz, pch=20, col=ColorBy)
tiplabels(tip=tippar, pch=c(15), col="black", cex=0.7)
tippar=162
plot(maizetree, type="unrooted", show.tip=FALSE, edge.width=0.1)
tiplabels(tip=tipmaiz, pch=20, col=ColorBy)
tiplabels(tip=tippar, pch=c(15), col="black", cex=0.7)
tippar
plot(tre, type="unrooted", show.tip=FALSE, edge.width=0.1)
plot(maizetree, type="unrooted", show.tip=FALSE, edge.width=0.1)
tiplabels(tip=c(1:161), pch=20, col=as.factor(fullmat$Longitud))
tiplabels(tip=c(1:161), pch=20, col=as.factor(fullmat$Longitud))
tiplabels(tip=c(162:165), pch=c(15,17), col=as.integer(tab$pop)[162:165], cex=0.7)
tiplabels(tip=c(162:165), pch=c(15,17), col="black", cex=0.7)
write.tree()
?write.tree()
tree<- nj(dist(as.matrix(plinkraw)))
plot(maizetree, type="unrooted", show.tip=FALSE, edge.width=0.1)
tiplabels(tip=tipmaiz, pch=20, col=ColorBy)
tiplabels(tip=tippar, pch=c(15), col="black", cex=0.7)
plot(tree, type="unrooted", show.tip=FALSE, edge.width=0.1)
tiplabels(tip=tipmaiz, pch=20, col=ColorBy)
tiplabels(tip=tippar, pch=c(15), col="black", cex=0.7)
?read.tree
tree
maizetree
labels(maizetree)
tip.label(maizetree)
tip.label$maizetree
maizetree$tip.label
?write.tree
write.tree(tree, file= "App-1/data/tree", tree.names=TRUE)
maizetree<- read.tree("data/tree")
setwd("C:/Users/amastretta/Copy/Science/CONABIO/Maices/Maices1raEtapa/DataAnalysis/shiny_maices/App-1")
maizetree<- read.tree("data/tree")
maizetree$tip.label
tree$tip.label
tree$tip.label
write.tree(tree, file= "App-1/data/tree", tip.label=tree$tip.label)
setwd("C:/Users/amastretta/Copy/Science/CONABIO/Maices/Maices1raEtapa/DataAnalysis/shiny_maices")
write.tree(tree, file= "App-1/data/tree", tip.label=tree$tip.label)
setwd("C:/Users/amastretta/Copy/Science/CONABIO/Maices/Maices1raEtapa/DataAnalysis/shiny_maices/App-1")
maizetree<- read.Lines("data/tree")
maizetree<- readLines("data/tree")
maizetree
as.tree(maizetree)
setwd("C:/Users/amastretta/Copy/Science/CONABIO/Maices/Maices1raEtapa/DataAnalysis/shiny_maices")
write.nexus(tree, file= "App-1/data/tree")
setwd("C:/Users/amastretta/Copy/Science/CONABIO/Maices/Maices1raEtapa/DataAnalysis/shiny_maices/App-1")
maizetree<- read.nexus("data/tree")
maizetree
tree
shiny::runApp()
plot(maizetree, type="unrooted", show.tip=FALSE, edge.width=0.1)
tiplabels(tip=tipmaiz, pch=20, col=ColorBy)
tiplabels(tip=tippar, pch=c(15), col="black", cex=0.7)
tiplabels(tip=tipmex, pch=c(17), col="black", cex=0.7)
tipmex=164
shiny::runApp()
shiny::runApp()
x$Raza
fullmat<-fullmat[order(fullmat$Sanchezetal_grupo),]
View(fullmat)
shiny::runApp()
pop_code <- as.vector(fullmat$Raza)
numcolsneeded<-length(levels(as.factor(pop_code)))-2
palette(c(rainbow(numcolsneeded), "black", "black")) # set palette
# make pop_codes match samples
tab <- data.frame(sample.id = pca$sample.id,
pop = factor(pop_code)[match(pca$sample.id, sample.id)],
EV1 = pca$eigenvect[,1],    # the first eigenvector
EV2 = pca$eigenvect[,2],    # the second eigenvector
stringsAsFactors = FALSE)
head(tab)
x<-fullmat[!duplicated(fullmat$Raza),]
x<-x[, c(4,19)]
nrow(x)
head(x)
x<-x[order(x$Sanchezetal_grupo),]
head(x)
x
#set levels of fullmat and tab to desired order
fullmat$Raza<-factor(as.vector(fullmat$Raza), levels=as.vector(x$Raza))
tab$pop<-factor(as.vector(tab$pop), levels=as.vector(x$Raza))
plot(tab$EV2[1:161], tab$EV1[1:161],
col=alpha(as.integer(tab$pop), 0.6), # add transparent colors
pch= 19,
xlab= paste0("eigenvector 2 explaining ", round(pc.percent, 2)[2], "%"), # this adds the % of variation that is accounted for by eigenvector 2 to the axis label
ylab= paste0("eigenvector 1 explaining ", round(pc.percent, 2)[1], "%"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
palette <-levels(maizemat$ColorByLong)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?sidebarLayout
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?hr
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x
bla<-"bla"
source(bla)
?renderImage
shiny::runApp()
?renderImage
?renderText
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?imageOutput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
library(maptools)
library(scales)
library(ape)
shiny::runApp()
?renderImage
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
list(src="Razalegend.png")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?h1
shiny::runApp()
?img
?img
?img
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?sliderInput
min(fullmat$Latitud), 2)
round(min(fullmat$Latitud)
round(min(fullmat$Latitud), 2)
shiny::runApp()
x<- c(1:100)
x[c(x>=50,x<=60]
x[c(x>=50,x<=60)]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x
x <- 1:100
shiny::runApp()
x[c(x>=50 | x<=60)]
x[x>=50 | x<=60]
x[(x>=50) | (x<=60)]
x
x<-1:100
x[(x>=50) | (x<=60)]
x[(x<=60) | (x>=50)]
x <- c(1:10)
x[(x>8) | (x<5)]
x[(x>=8) | (x<=5)]
(x>=8) | (x<=5)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("/Users/kasanchez/Downloads/maptools",
repos = NULL,
type = "source")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
